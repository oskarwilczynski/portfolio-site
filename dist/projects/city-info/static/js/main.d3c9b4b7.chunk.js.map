{"version":3,"sources":["components/StarterScreen.js","components/ErrorWindow.js","components/DescWindow.js","components/WeatherWindow.js","components/SearchField.js","components/Event.js","components/EventsWindow.js","components/App.js","components/ErrorBoundary.js","index.js"],"names":["StarterDiv","styled","div","StarterTitle","h1","StarterText","p","StarterScreen","ErrorTitle","ErrorText","ErrorWindow","component","error","StyledCard","Card","DescWindow","city","CardMedia","overlay","CardHeader","title","src","image","alt","CardContent","dangerouslySetInnerHTML","__html","sanitizeHtml","description","StyledFlebox","StyledTemp","StyledSkycons","Skycons","WeatherWindow","weather","temperature","icon","SearchField","autocomplete","setAddress","setCoords","useState","query","setQuery","handleSearchSubmit","addressObject","getPlace","address","formatted_address","prevState","lat","geometry","location","lng","url","onLoad","google","maps","places","Autocomplete","document","getElementById","types","addListener","id","onRequestSearch","onChange","placeholder","hintText","value","style","margin","marginTop","maxWidth","StyledDiv","StyledImg","img","StyledTitle","h3","StyledVenue","Event","onClick","window","open","details","venue_name","ErrorHeader","EventsWindow","events","eventsArr","length","map","event","align","variant","App","isLoading","setIsLoading","coords","setCity","setWeather","setEvents","useEffect","getData","a","Promise","allSettled","getCity","getWeather","getEvents","then","results","console","log","Object","keys","fetchData","fetch","result","ok","status","statusText","json","wikiPage","pageId","search","pageid","cityDescQuery","pages","extract","cityImgQuery","original","source","weatherData","Math","round","currently","replace","toUpperCase","eventsData","type","color","height","width","ErrorBoundary","props","state","hasError","this","setState","children","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.d3c9b4b7.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst StarterDiv = styled.div`\r\n    padding-top: 8vw;\r\n`;\r\n\r\nconst StarterTitle = styled.h1`\r\n    color: grey;\r\n    font-size: 4vw;\r\n    letter-spacing: 0.3vw;\r\n    text-align: center;\r\n`;\r\n\r\nconst StarterText = styled.p`\r\n    color: grey;\r\n    font-size: 1.75vw;\r\n    text-align: center;\r\n`;\r\n\r\nconst StarterScreen = () => (\r\n    <StarterDiv>\r\n        <StarterTitle>Just search for the city...</StarterTitle>\r\n        <StarterText>CityInfo is a simple React web app that lets you see the city information such as basic description, weather or live events.</StarterText>            \r\n    </StarterDiv>\r\n)\r\n\r\nexport default StarterScreen;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\n// const ErrorCard = styled(Card)`\r\n//     margin: 0 auto;\r\n//     padding: 1vw;\r\n//     width: 80%;\r\n// `\r\n\r\nconst ErrorTitle = styled.h1`\r\n    font-size: 4vw;\r\n    letter-spacing: 0.3vw;\r\n    text-align: center;\r\n`;\r\n\r\nconst ErrorText = styled.p`\r\n    font-size: 1.75vw;\r\n    text-align: center;\r\n`;\r\n\r\nconst ErrorWindow = ({ component, error }) => (\r\n    <div>\r\n        <ErrorTitle>Error! API fetch failed for {component}.</ErrorTitle>\r\n        <ErrorText>{error}</ErrorText>            \r\n    </div>\r\n)\r\n\r\nexport default ErrorWindow;","import styled from 'styled-components';\r\nimport sanitizeHtml from 'sanitize-html';\r\nimport { Card, CardMedia, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nimport ErrorWindow from './ErrorWindow';\r\n\r\nconst StyledCard = styled(Card)`\r\n    && {\r\n        margin-top: 3vw;\r\n        margin-bottom: 1vw;\r\n        width: 58%;\r\n        float: left;\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nconst DescWindow = ({ city }) => {\r\n    const createMarkup = () => {\r\n        return { __html: sanitizeHtml(city.description) };\r\n    }\r\n\r\n    return (\r\n        <StyledCard>\r\n            {city.error ?\r\n                <ErrorWindow\r\n                    component=\"city description\"\r\n                    error={city.error}\r\n                /> :\r\n                <>\r\n                    <CardMedia\r\n                        overlay={\r\n                            <CardHeader title={city.title}/>\r\n                        }\r\n                    >\r\n                        <img src={city.image} alt={city.title} />\r\n                    </CardMedia>\r\n                    <CardContent dangerouslySetInnerHTML={createMarkup()} />\r\n                </>\r\n            }\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default DescWindow;","import Skycons from 'react-skycons';\r\nimport styled from 'styled-components';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport ErrorWindow from './ErrorWindow';\r\n\r\nconst StyledCard = styled(Card)`\r\n    && {\r\n        margin-top: 3vw;\r\n        width: 40%;\r\n        float: right;\r\n    }\r\n`\r\n\r\nconst StyledFlebox = styled.div`\r\n    display: flex;\r\n    margin-top: 1vw;\r\n    margin-bottom: 1vw;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n`\r\n\r\nconst StyledTemp = styled.p`\r\n    font-size: 5vw;\r\n    margin: 0;\r\n`\r\n\r\nconst StyledSkycons = styled(Skycons)`\r\n    && {\r\n        width: 40% !important;\r\n        height: 40% !important;\r\n    }\r\n`\r\n\r\nconst WeatherWindow  = ({ weather }) => (\r\n    <StyledCard>\r\n        {weather.error ?\r\n            <ErrorWindow\r\n                component=\"weather\"\r\n                error={weather.error}\r\n            /> :\r\n            <StyledFlebox>\r\n                <StyledTemp>{weather.temperature}</StyledTemp>\r\n                <StyledSkycons \r\n                    icon={weather.icon}\r\n                />\r\n            </StyledFlebox>\r\n        }\r\n    </StyledCard>\r\n)\r\n\r\nexport default WeatherWindow;","import { useState } from 'react';\r\nimport SearchBar from 'material-ui-search-bar';\r\nimport Script from 'react-load-script';\r\n\r\nconst SearchField = ({ setAddress, setCoords }) => {\r\n    let autocomplete;\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const handleSearchSubmit = () =>  {\r\n        let addressObject = autocomplete.getPlace();\r\n        let address = addressObject.formatted_address;\r\n        \r\n        setAddress(address);\r\n        setCoords(prevState => ({\r\n            ...prevState,\r\n            lat: addressObject.geometry.location.lat(),\r\n            lng: addressObject.geometry.location.lng()\r\n        }));\r\n\r\n        if (address) {\r\n            setQuery(address);\r\n        }\r\n    }\r\n\r\n    const handleScriptLoad = () => {\r\n        const options = {\r\n            types: ['(cities)'],\r\n        };\r\n\r\n        /*global google*/\r\n        autocomplete = new google.maps.places.Autocomplete(\r\n            document.getElementById('autocomplete'),\r\n            options,\r\n        );\r\n\r\n        autocomplete.addListener('place_changed', handleSearchSubmit);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Script url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA4S7a-WtPtr7UD7whHwe9nbsq6zpShc_U&libraries=places,geometry&language=en\"          \r\n                onLoad={handleScriptLoad}\r\n            />        \r\n            <SearchBar\r\n                id=\"autocomplete\"\r\n                onRequestSearch={() => false}\r\n                onChange={() => false}\r\n                placeholder=\"\" \r\n                hintText=\"Search City\" \r\n                value={query}\r\n                style={{\r\n                    margin: '0 auto',\r\n                    marginTop: '2vw',\r\n                    maxWidth: 800,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDiv = styled.div`\r\n    && {\r\n        height: 20%;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst StyledImg = styled.img`\r\n    && {\r\n        float: left;\r\n        max-height: 48px;\r\n        max-width: 48px;\r\n        margin: 0.5vw;\r\n    }\r\n`\r\n\r\nconst StyledTitle = styled.h3`\r\n    && {\r\n    }\r\n`\r\n\r\nconst StyledVenue = styled.p`\r\n    && {\r\n    }\r\n`\r\n\r\nconst Event = () => {\r\n    const imagePlaceholder = \"http://icons.iconarchive.com/icons/icons8/windows-8/128/City-No-Camera-icon.png\"\r\n\r\n    const onClickEvent = () => {\r\n        window.open(details.url);\r\n    }\r\n\r\n    return (\r\n        <StyledDiv onClick={() => onClickEvent()}>\r\n            <StyledImg src={details.image ? details.image.url : imagePlaceholder} />\r\n            <StyledTitle>{details.title}</StyledTitle>\r\n            <StyledVenue>{details.venue_name}</StyledVenue>\r\n        </StyledDiv>\r\n    )\r\n}\r\n\r\nexport default Event;","import styled from 'styled-components';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Event from './Event';\r\nimport ErrorWindow from './ErrorWindow';\r\n\r\nconst StyledCard = styled(Card)`\r\n    && {\r\n        margin-top: 3vw;\r\n        width: 40%;\r\n        float: right;\r\n    }\r\n`\r\n\r\nconst ErrorHeader = styled.h1`\r\n  && {\r\n    color: #982520;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst EventsWindow = ({ events }) => (\r\n    <StyledCard>\r\n        {events.error ? \r\n            <ErrorWindow\r\n                component=\"events\"\r\n                error={events.error}\r\n            /> :\r\n            !events.eventsArr.length ?\r\n                <ErrorHeader align='center' variant=\"display2\">\r\n                    No events found.\r\n                </ErrorHeader> :\r\n                <>\r\n                    {events.eventsArr.map(event => <Event key={event.id} details={event} />)}\r\n                </>\r\n        }\r\n    </StyledCard>\r\n)\r\n\r\nexport default EventsWindow;","import { useState, useEffect } from 'react';\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport StarterScreen from './StarterScreen';\r\nimport DescWindow from './DescWindow';\r\nimport WeatherWindow from './WeatherWindow';\r\nimport SearchField from './SearchField';\r\nimport EventsWindow from './EventsWindow';\r\n\r\nconst App = () => {\r\n    const [isLoading, setIsLoading] = useState('Initial');\r\n    const [address, setAddress] = useState('');\r\n    const [coords, setCoords] = useState({});\r\n\r\n    const [city, setCity] = useState({});\r\n    const [weather, setWeather] = useState({});\r\n    const [events, setEvents] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await Promise.allSettled([getCity(), getWeather(), getEvents()]).\r\n                then(results => {\r\n                    console.log(results)\r\n                    setIsLoading(false);\r\n                });\r\n        }\r\n\r\n        if (Object.keys(coords).length && address) {\r\n            setIsLoading(true);\r\n\r\n            getData();\r\n        }\r\n    }, [coords, address]);\r\n\r\n    const fetchData = async (url) => {\r\n        try {\r\n            const result = await fetch(url);\r\n            console.log(result)\r\n            \r\n            if (!result.ok) {\r\n                return { error: `${result.status} ${result.statusText}` };\r\n            }\r\n            \r\n            return result.json();\r\n        } catch(error) {\r\n            console.error('Error', error);\r\n        }\r\n    }\r\n\r\n    const getCity = async () => {\r\n        const wikiPage = await fetchData(`https://en.wikipedia.org/w/api.php?format=json&origin=*&action=query&list=search&utf8=&srsearch=${address}`);\r\n\r\n        if (wikiPage && !('error' in wikiPage)) {\r\n            const pageId = wikiPage.query.search[0].pageid;\r\n\r\n            const cityDescQuery = await fetchData(`https://en.wikipedia.org/w/api.php?format=json&origin=*&action=query&prop=extracts&exintro=&pageids=${pageId}`);\r\n            const title = cityDescQuery.query.pages[pageId].title;\r\n            const description = cityDescQuery.query.pages[pageId].extract;\r\n    \r\n            const cityImgQuery = await fetchData(`https://en.wikipedia.org/w/api.php?format=json&origin=*&action=query&prop=pageimages&&piprop=original&titles=${title}`);\r\n            const image = cityImgQuery.query.pages[pageId].original.source;\r\n    \r\n            setCity({\r\n                ...city,\r\n                title,\r\n                description,\r\n                image,\r\n                error: \"\",\r\n            });\r\n        } else {\r\n            setCity({\r\n                ...city,\r\n                error: wikiPage?.error || 'Unknown error',\r\n            })\r\n        }\r\n    }\r\n\r\n    const getWeather = async () => {\r\n        const weatherData = await fetchData(`https://api.darksky.net/forecast/3ebf0a35b462ec06a8299fc803dfe539/${coords.lat},${coords.lng}?units=si&exclude=minutely,hourly,daily,alerts,flags`);\r\n\r\n        if (weatherData && !('error' in weatherData)) {\r\n            const temperature = Math.round(weatherData.currently.temperature) + \"\\xB0C\";\r\n            const icon = weatherData.currently.icon.replace(/-/g, \"_\").toUpperCase();\r\n    \r\n            setWeather({\r\n                ...weather,\r\n                temperature,\r\n                icon,\r\n                error: \"\",\r\n            });\r\n        } else {\r\n            setWeather({\r\n                ...weather,\r\n                error: weatherData?.error || 'Unknown error',\r\n            });\r\n        }\r\n    }\r\n\r\n    const getEvents = async () => {\r\n        const eventsData = await fetchData(`http://api.eventful.com/json/events/search?app_key=pMZVPqg7vM3CW3fM&where=${coords.lat},${coords.lng}&within=25&page_size=5`);\r\n\r\n        if (eventsData && !('error' in eventsData)) {\r\n            const eventsArr = eventsData.events;\r\n\r\n            setEvents({\r\n                eventsArr,\r\n                error: \"\",\r\n            });\r\n        } else {\r\n            setEvents({\r\n                ...events,\r\n                error: eventsData?.error || 'Unknown error',\r\n            });\r\n        }\r\n    }\r\n\r\n    // if (Object.keys(city).length && Object.keys(weather).length && Object.keys(events).length) {\r\n    if (isLoading === 'Initial') {\r\n        return (\r\n            <>\r\n                <SearchField\r\n                    setAddress={setAddress}\r\n                    setCoords={setCoords}\r\n                />\r\n                <StarterScreen />\r\n            </>\r\n        )\r\n    } else if (isLoading) {\r\n        return (\r\n            <>\r\n                <SearchField\r\n                    setAddress={setAddress}\r\n                    setCoords={setCoords}\r\n                />\r\n                <div style={{'textAlign': 'center', 'marginTop': '10vh'}}>\r\n                    <Loader\r\n                        type=\"Oval\"\r\n                        color=\"grey\"\r\n                        height={200}\r\n                        width={200}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SearchField\r\n                setAddress={setAddress}\r\n                setCoords={setCoords}\r\n            />\r\n            <WeatherWindow\r\n                weather={weather}\r\n            />\r\n            <DescWindow\r\n                city={city}\r\n            />\r\n            <EventsWindow\r\n                events={events}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorHeader = styled.h1`\r\n  && {\r\n    color: #982520;\r\n  }\r\n`\r\n\r\n// const StyledCard = styled(Card)`\r\n//     && {\r\n//         width: 40%;\r\n//         float: ${props => props.float};\r\n//     }\r\n// `\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    this.setState({ hasError: true });\r\n    console.error(error);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Card>\r\n          <ErrorHeader align='center' variant=\"display2\">\r\n            Oops! Something went wrong!\r\n          </ErrorHeader>\r\n        </Card>\r\n      )\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\n\r\nReactDOM.render(<ErrorBoundary><App /></ErrorBoundary>, document.getElementById('root'));\r\n"],"sourceRoot":""}